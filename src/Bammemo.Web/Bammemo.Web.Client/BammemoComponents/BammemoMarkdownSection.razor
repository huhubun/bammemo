@using Bammemo.Web.Client.Extensions.MarkdigExtensions.MoreSeparator
@using Bammemo.Web.Client.Extensions.MarkdigExtensions.MoreSeparator.Blocks
@using Markdig
@using System.Text
@rendermode InteractiveAuto
@inject NavigationManager NavigationManager

@if (markdownHtml != null)
{
    <div style="width:100%;">
        @(new MarkupString(markdownHtml))
    </div>

    if (hasMore && ReadAllUrl!=null)
    {
        <FluentAnchor IconStart="@(new Icons.Regular.Size16.ReadingList())" Href="@ReadAllUrl">阅读全文</FluentAnchor>
        <NavLink href="@ReadAllUrl">阅读全文 NavLink</NavLink>
        <FluentNavLink Href="@ReadAllUrl">阅读全文 FluentNavLink</FluentNavLink>
        <FluentButton OnClick="@(_ => NavigationManager.NavigateTo(ReadAllUrl))">阅读全文 Nav</FluentButton>
    }
}

@code {
    [Parameter]
    public required string Content { get; set; }

    [Parameter]
    public required bool FullDisplay{ get; set; }

    [Parameter]
    public string? ReadAllUrl { get; set; }

    private string? markdownHtml = null;
    private bool hasMore = false;

    protected override void OnInitialized()
    {
        var pipeline = new MarkdownPipelineBuilder()
            .Use <MoreSeparatorExtension>()
            .UseAdvancedExtensions()
            .Build();


        if (FullDisplay)
        {
            markdownHtml = Markdown.ToHtml(Content, pipeline);
        }
        else
        {
            (markdownHtml, hasMore) = ParseContent(Content, pipeline);
        }
    }

    public (string Summary, bool HasMore) ParseContent(string markdown, MarkdownPipeline pipeline)
    {
        var document = Markdown.Parse(markdown, pipeline);
        var summary = new StringBuilder();
        bool hasMore = false;

        foreach (var block in document)
        {
            if (block is MoreSeparatorBlock)
            {
                hasMore = true;
                break;
            }

            var renderer = new Markdig.Renderers.HtmlRenderer(new StringWriter(summary));
            renderer.Write(block);
        }

        return (summary.ToString(), hasMore);
    }

}
