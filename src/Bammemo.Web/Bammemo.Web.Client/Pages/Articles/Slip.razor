@page "/s/{id}"
@using Bammemo.Service.Abstractions.WebApiModels.Slips
@implements IDisposable
@inject PersistentComponentState persistentComponentState
@inject ICommonSlipService commonSlipService

@if (persistSlipDetail != null)
{
    <div>
        @persistSlipDetail.Content
    </div>
}

@code {
    private PersistingComponentStateSubscription persistingSubscription;
    private SlipDetailDto? persistSlipDetail;

    [Parameter]
    public required string Id { get; set; }

    protected override void OnInitialized()
    {
        persistingSubscription = persistentComponentState.RegisterOnPersisting(PersistData);
    }

    protected async override Task OnParametersSetAsync()
    {
        if (!persistentComponentState.TryTakeFromJson(nameof(persistSlipDetail), out persistSlipDetail))
        {
            persistSlipDetail = await commonSlipService.GetByIdAsync(Id);
        }
    }

    private Task PersistData()
    {
        persistentComponentState.PersistAsJson(nameof(persistSlipDetail), persistSlipDetail);
        return Task.CompletedTask;
    }

    void IDisposable.Dispose() => persistingSubscription.Dispose();
}
