@page "/admin"
@using Bammemo.Service.Abstractions.Paginations
@using Bammemo.Service.Abstractions.WebApiModels.Slips
@rendermode InteractiveWebAssembly
@inject ICommonSlipService commonSlipService
@inject IMapper mapper

<PageTitle>Admin 123</PageTitle>

<FluentGrid Justify="JustifyContent.Center">
    <FluentGridItem xs="12" lg="8" xl="6">
        <FluentStack Orientation="Orientation.Vertical">

            <Bammemo.Web.Client.Layout.SlipEditor OnSlipSaved="OnNewSlipSaved" />

            @foreach (var s in newSlipList.OrderByDescending(s => s.Id))
            {
                <Bammemo.Web.Client.Layout.SlipCard Data="s" @key="s.Id" />
            }

            @foreach (var s in slipList)
            {
                <Bammemo.Web.Client.Layout.SlipCard Data="s" @key="s.Id" />
            }

            @if (cursorSlipId != null)
            {
                <div>
                    <FluentButton OnClick="LoadMore">Load more</FluentButton>
                </div>
            }

        </FluentStack>
    </FluentGridItem>

    <FluentGridItem lg="3" HiddenWhen="GridItemHidden.MdAndDown">
        <div>asdfasdf</div>
        <div>asdfasdf</div>
        <div>asdfasdf</div>
        <div>asdfasdf</div>
    </FluentGridItem>
</FluentGrid>


@code {

    private List<ListSlipDto> slipList = new List<ListSlipDto>();
    private List<ListSlipDto> newSlipList = new List<ListSlipDto>();
    string? cursorSlipId = null;

    protected override async Task OnInitializedAsync()
    {
        var slips = await commonSlipService.ListAsync(null);

        RenderSlips(slips);
    }

    private void RenderSlips(ListSlipDto[] slips)
    {
        if (slips.Length > 0)
        {
            slipList.AddRange(slips);
            cursorSlipId = slips.Last().Id;
        }
    }

    private async Task LoadMore()
    {
        var slips = await commonSlipService.ListAsync(new CursorPagingRequest<string>
            {
                Cursor = cursorSlipId,
                Take = 5
            });

        RenderSlips(slips);
    }

    private void OnNewSlipSaved(CreateSlipResponse response)
    {
        if (newSlipList.Count == 0 && slipList.Count == 0)
        {
            cursorSlipId = response.Id;
        }

        newSlipList.Add(mapper.Map<ListSlipDto>(response));
    }
}